package io.github.drclass.challenges.problems.euler;

import io.github.drclass.challenges.api.Problem;
import io.github.drclass.challenges.api.Result;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:<br>
 * 1, 2, 3, 5, 8, 12, 21, 34, 55, 89, ...<br>
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */
public class Problem0002 implements Problem {
	public Result<?> solve() {
		int a = 1;
		int b = 2;
		int sum = 0;
		while (a <= 4000000) {
			if (a % 2 == 0) {
				sum += a;
			}
			b += a;
			a = b - a;
		}
		return new Result<>(sum);
	}
}
